{"version":3,"sources":["style.js","App.jsx","index.js"],"names":["useStyles","makeStyles","container","background","minHeight","title","color","padding","avatar","textGreen","textRed","App","styles","useState","coins","setCoin","search","setSearch","useEffect","axios","get","then","res","data","console","log","catch","err","filteredCoins","filter","coin","name","toLowerCase","includes","className","CssBaseline","Container","maxWidth","Typography","variant","align","gutterBottom","Input","defaultValue","sx","mb","minWidth","fontSize","noValidate","onChange","e","target","value","Grid","rowSpacing","columnSpacing","map","item","xs","sm","md","Card","CardContent","Avatar","width","height","src","image","market_cap_rank","component","symbol","millify","current_price","market_cap","price_change_percentage_24h","id","ReactDOM","render","document","getElementById"],"mappings":"iQAGaA,EAAYC,aAAW,iBAAO,CACvCC,UAAW,CACTC,WAAY,mDACZC,UAAW,SAEbC,MAAM,CACJC,MAAO,QACPC,QAAS,UAEXC,OAAQ,CACND,QAAS,iBAEXE,UAAW,CACTH,MAAO,SAETI,QAAS,CACPJ,MAAO,W,OCuDEK,EApEF,WAEX,IAAMC,EAASZ,IAEf,EAAyBa,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAIAC,qBAAU,WACRC,IAAMC,IAHI,4HAITC,MAAK,SAAAC,GACJP,EAAQO,EAAIC,MACZC,QAAQC,IAAIH,EAAIC,SAEjBG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,QACzB,IAGH,IAEMC,EAAgBd,EAAMe,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,cAAcC,SAASjB,EAAOgB,kBAEnF,OACE,sBAAKE,UAAWtB,EAAOV,UAAvB,UACE,cAACiC,EAAA,EAAD,IACA,gCACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAASC,cAAY,EAACP,UAAWtB,EAAOP,MAAvE,oCAGA,cAACqC,EAAA,EAAD,CAAOC,aAAa,SAASC,GAAI,CAACC,GAAI,EAAGC,SAAS,OAAOC,SAAS,OAAQzC,MAAM,SAAU0C,YAAU,EACpGC,SAba,SAAAC,GAAC,OAAIjC,EAAUiC,EAAEC,OAAOC,aAevC,cAAChB,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACgB,EAAA,EAAD,CAAMnD,WAAS,EAACoD,WAAY,EAAGC,cAAgB,EAA/C,SACG3B,EAAc4B,KAAK,SAAA1B,GAAI,OACtB,cAACuB,EAAA,EAAD,CAAMI,MAAI,EAAeC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAIhB,GAAI,CAACC,GAAI,GAAzD,SACE,cAACgB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAcxD,MAAM,iBAApB,UACI,cAACyD,EAAA,EAAD,CACE7B,UAAWtB,EAAOJ,OAClBoC,GAAI,CAACoB,MAAO,GAAIC,OAAQ,IACxBC,IAAKpC,EAAKqC,QAEZ,cAAC7B,EAAA,EAAD,CAAYG,cAAY,EAACF,QAAQ,KAAjC,SACE,sCAAOT,EAAKsC,gBAAZ,aAAgCtC,EAAKC,UAEvC,eAACO,EAAA,EAAD,CAAY+B,UAAU,MAAtB,UACE,yCAAYvC,EAAKwC,UACjB,wCAAWC,IAAQzC,EAAK0C,kBACxB,6CAAgBD,IAAQzC,EAAK2C,eAC5B3C,EAAK4C,6BAA+B,EACrC,oBAAGxC,UAAWtB,EAAOH,UAArB,2BAA+C8D,IAAQzC,EAAK4C,gCAC5D,oBAAGxC,UAAWtB,EAAOF,QAArB,2BAA6C6D,IAAQzC,EAAK4C,yCAjBpD5C,EAAK6C,kBCvCnCC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.7d892334.chunk.js","sourcesContent":["import { makeStyles } from '@mui/styles';\r\n\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    container: {\r\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n      minHeight: '100vh',\r\n    },\r\n    title:{\r\n      color: 'white',\r\n      padding: '30px 0',\r\n    },\r\n    avatar: {\r\n      padding: '10px 0 0 10px',\r\n    },\r\n    textGreen: {\r\n      color: 'green',\r\n    },\r\n    textRed: {\r\n      color: 'red',\r\n    }\r\n  }));","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Typography , Card, CardContent, CssBaseline, Grid, Container, Avatar,Input } from '@mui/material';\r\nimport millify from 'millify';\r\nimport { useStyles } from './style'\r\n\r\nconst  App = () => {\r\n\r\n  const styles = useStyles();\r\n\r\n  const [coins, setCoin] = useState([])\r\n  const [search, setSearch] = useState('')\r\n\r\n  const url = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&order=market_cap_desc&per_page=100&page=1&sparkline=false';\r\n\r\n  useEffect(() => {\r\n    axios.get(url)\r\n    .then(res => {\r\n      setCoin(res.data)\r\n      console.log(res.data)\r\n    })\r\n    .catch(err => console.log(err))\r\n  }, []);\r\n  \r\n\r\n  const handleSearch = e => setSearch(e.target.value)\r\n\r\n  const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()))\r\n\r\n  return (  \r\n    <div className={styles.container}>\r\n      <CssBaseline />\r\n      <div>\r\n        <Container maxWidth='sm'>\r\n          <Typography variant='h4' align='center' gutterBottom className={styles.title}>\r\n            Cryptocurrency Finance \r\n          </Typography>\r\n          <Input defaultValue=\"Search\" sx={{mb: 4, minWidth:'100%',fontSize:'24px', color:'white'}} noValidate \r\n          onChange={handleSearch}/>\r\n        </Container>\r\n        <Container maxWidth='lg'>\r\n          <Grid container rowSpacing={4} columnSpacing= {8} >\r\n            {filteredCoins.map( coin => (\r\n              <Grid item key={coin.id} xs={12} sm={6} md={4}  sx={{mb: 4}}> \r\n                <Card >\r\n                  <CardContent  color='text.secondary'>\r\n                      <Avatar\r\n                        className={styles.avatar}\r\n                        sx={{width: 80, height: 80}}\r\n                        src={coin.image}\r\n                      />\r\n                      <Typography gutterBottom variant='h6' >\r\n                        <p>{`${coin.market_cap_rank}. ${coin.name}`}</p>\r\n                      </Typography>\r\n                      <Typography component='div'>\r\n                        <p>Symbol: {coin.symbol}</p> \r\n                        <p>Price: {millify(coin.current_price)}</p>\r\n                        <p>Market Cap: {millify(coin.market_cap)}</p>\r\n                        {coin.price_change_percentage_24h >= 0 ? \r\n                        <p className={styles.textGreen}>Daily Change: {millify(coin.price_change_percentage_24h)}</p> : \r\n                        <p className={styles.textRed}>Daily Change: {millify(coin.price_change_percentage_24h)}</p>\r\n                        }\r\n                      </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}